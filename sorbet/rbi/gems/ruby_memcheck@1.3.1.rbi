# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ruby_memcheck` gem.
# Please instead update this file by running `bin/tapioca gem ruby_memcheck`.

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#3
module RubyMemcheck
  class << self
    # source://ruby_memcheck//lib/ruby_memcheck.rb#17
    def config(**opts); end

    # source://ruby_memcheck//lib/ruby_memcheck.rb#21
    def default_configuration; end
  end
end

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#4
class RubyMemcheck::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#48
  def initialize(binary_name:, ruby: T.unsafe(nil), valgrind: T.unsafe(nil), valgrind_options: T.unsafe(nil), valgrind_suppressions_dir: T.unsafe(nil), valgrind_generate_suppressions: T.unsafe(nil), skipped_ruby_functions: T.unsafe(nil), valgrind_xml_dir: T.unsafe(nil), output_io: T.unsafe(nil), filter_all_errors: T.unsafe(nil)); end

  # Returns the value of attribute binary_name.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#34
  def binary_name; end

  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#86
  def command(*args); end

  # Returns the value of attribute filter_all_errors.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#43
  def filter_all_errors; end

  # Returns the value of attribute filter_all_errors.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#43
  def filter_all_errors?; end

  # Returns the value of attribute output_io.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#42
  def output_io; end

  # Returns the value of attribute ruby.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#35
  def ruby; end

  # Returns the value of attribute skipped_ruby_functions.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#40
  def skipped_ruby_functions; end

  # Returns the value of attribute valgrind.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#36
  def valgrind; end

  # Returns the value of attribute valgrind_generate_suppressions.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#39
  def valgrind_generate_suppressions; end

  # Returns the value of attribute valgrind_generate_suppressions.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#39
  def valgrind_generate_suppressions?; end

  # Returns the value of attribute valgrind_options.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#37
  def valgrind_options; end

  # Returns the value of attribute valgrind_suppression_files.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#38
  def valgrind_suppression_files; end

  # Returns the value of attribute valgrind_xml_dir.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#41
  def valgrind_xml_dir; end

  private

  # source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#106
  def get_valgrind_suppression_files(dir); end
end

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#15
RubyMemcheck::Configuration::DEFAULT_SKIPPED_RUBY_FUNCTIONS = T.let(T.unsafe(nil), Array)

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#5
RubyMemcheck::Configuration::DEFAULT_VALGRIND = T.let(T.unsafe(nil), String)

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#6
RubyMemcheck::Configuration::DEFAULT_VALGRIND_OPTIONS = T.let(T.unsafe(nil), Array)

# source://ruby_memcheck//lib/ruby_memcheck/configuration.rb#14
RubyMemcheck::Configuration::DEFAULT_VALGRIND_SUPPRESSIONS_DIR = T.let(T.unsafe(nil), String)

# source://ruby_memcheck//lib/ruby_memcheck/frame.rb#4
class RubyMemcheck::Frame
  # @return [Frame] a new instance of Frame
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#7
  def initialize(configuration, frame_xml); end

  # Returns the value of attribute configuration.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#5
  def configuration; end

  # Returns the value of attribute file.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#5
  def file; end

  # Returns the value of attribute fn.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#5
  def fn; end

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#24
  def in_binary?; end

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#16
  def in_ruby?; end

  # Returns the value of attribute line.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#5
  def line; end

  # Returns the value of attribute obj.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#5
  def obj; end

  # source://ruby_memcheck//lib/ruby_memcheck/frame.rb#31
  def to_s; end
end

# source://ruby_memcheck//lib/ruby_memcheck/stack.rb#4
class RubyMemcheck::Stack
  # @return [Stack] a new instance of Stack
  #
  # source://ruby_memcheck//lib/ruby_memcheck/stack.rb#7
  def initialize(configuration, stack_xml); end

  # Returns the value of attribute configuration.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/stack.rb#5
  def configuration; end

  # Returns the value of attribute frames.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/stack.rb#5
  def frames; end

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/stack.rb#12
  def skip?; end
end

# source://ruby_memcheck//lib/ruby_memcheck/suppression.rb#4
class RubyMemcheck::Suppression
  # @return [Suppression] a new instance of Suppression
  #
  # source://ruby_memcheck//lib/ruby_memcheck/suppression.rb#7
  def initialize(configuration, suppression_node); end

  # Returns the value of attribute root.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/suppression.rb#5
  def root; end

  # source://ruby_memcheck//lib/ruby_memcheck/suppression.rb#11
  def to_s; end
end

# source://ruby_memcheck//lib/ruby_memcheck/test_task.rb#4
class RubyMemcheck::TestTask < ::Rake::TestTask
  include ::RubyMemcheck::TestTaskReporter

  # @return [TestTask] a new instance of TestTask
  #
  # source://ruby_memcheck//lib/ruby_memcheck/test_task.rb#9
  def initialize(*args); end

  # Returns the value of attribute configuration.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/test_task.rb#7
  def configuration; end

  # source://ruby_memcheck//lib/ruby_memcheck/test_task.rb#20
  def ruby(*args, **options, &block); end
end

# source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#4
module RubyMemcheck::TestTaskReporter
  # Returns the value of attribute errors.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#7
  def errors; end

  private

  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#52
  def output_valgrind_errors; end

  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#28
  def parse_valgrind_output(xml_files); end

  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#46
  def remove_valgrind_xml_files(xml_files); end

  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#11
  def report_valgrind_errors; end

  # source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#24
  def valgrind_xml_files; end
end

# source://ruby_memcheck//lib/ruby_memcheck/test_task_reporter.rb#5
RubyMemcheck::TestTaskReporter::VALGRIND_REPORT_MSG = T.let(T.unsafe(nil), String)

# source://ruby_memcheck//lib/ruby_memcheck/version.rb#4
RubyMemcheck::VERSION = T.let(T.unsafe(nil), String)

# source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#4
class RubyMemcheck::ValgrindError
  # @return [ValgrindError] a new instance of ValgrindError
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#10
  def initialize(configuration, error); end

  # Returns the value of attribute kind.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#8
  def kind; end

  # Returns the value of attribute msg.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#8
  def msg; end

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#29
  def skip?; end

  # Returns the value of attribute stack.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#8
  def stack; end

  # Returns the value of attribute suppression.
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#8
  def suppression; end

  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#33
  def to_s; end

  private

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#53
  def kind_leak?; end

  # @return [Boolean]
  #
  # source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#49
  def should_filter?; end
end

# source://ruby_memcheck//lib/ruby_memcheck/valgrind_error.rb#5
RubyMemcheck::ValgrindError::SUPPRESSION_NOT_CONFIGURED_ERROR_MSG = T.let(T.unsafe(nil), String)
