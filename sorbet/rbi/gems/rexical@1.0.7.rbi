# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rexical` gem.
# Please instead update this file by running `bin/tapioca gem rexical`.

# source://rexical//lib/rexical/generator.rb#12
module Rexical; end

# source://rexical//lib/rexical/rexcmd.rb#17
class Rexical::Cmd
  # @return [Cmd] a new instance of Cmd
  #
  # source://rexical//lib/rexical/rexcmd.rb#64
  def initialize; end

  # source://rexical//lib/rexical/rexcmd.rb#33
  def run; end

  # source://rexical//lib/rexical/rexcmd.rb#106
  def usage(msg = T.unsafe(nil)); end
end

# source://rexical//lib/rexical/rexcmd.rb#18
Rexical::Cmd::OPTIONS = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical.rb#6
Rexical::Copyright = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical/generator.rb#16
class Rexical::Generator
  # @return [Generator] a new instance of Generator
  #
  # source://rexical//lib/rexical/generator.rb#29
  def initialize(opts); end

  # source://rexical//lib/rexical/generator.rb#45
  def add_footer(st); end

  # source://rexical//lib/rexical/generator.rb#41
  def add_header(st); end

  # source://rexical//lib/rexical/generator.rb#49
  def add_inner(st); end

  # source://rexical//lib/rexical/generator.rb#69
  def add_macro(st); end

  # source://rexical//lib/rexical/generator.rb#53
  def add_option(st); end

  # source://rexical//lib/rexical/generator.rb#100
  def add_rule(rule_state, rule_expr, rule_action = T.unsafe(nil)); end

  # Returns the value of attribute class_name.
  #
  # source://rexical//lib/rexical/generator.rb#21
  def class_name; end

  # Sets the attribute class_name
  #
  # @param value the value to set the attribute class_name to.
  #
  # source://rexical//lib/rexical/generator.rb#21
  def class_name=(_arg0); end

  # Returns the value of attribute debug.
  #
  # source://rexical//lib/rexical/generator.rb#27
  def debug; end

  # Sets the attribute debug
  #
  # @param value the value to set the attribute debug to.
  #
  # source://rexical//lib/rexical/generator.rb#27
  def debug=(_arg0); end

  # Returns the value of attribute exclusive_states.
  #
  # source://rexical//lib/rexical/generator.rb#24
  def exclusive_states; end

  # Sets the attribute exclusive_states
  #
  # @param value the value to set the attribute exclusive_states to.
  #
  # source://rexical//lib/rexical/generator.rb#24
  def exclusive_states=(_arg0); end

  # Returns the value of attribute grammar_file.
  #
  # source://rexical//lib/rexical/generator.rb#17
  def grammar_file; end

  # Sets the attribute grammar_file
  #
  # @param value the value to set the attribute grammar_file to.
  #
  # source://rexical//lib/rexical/generator.rb#17
  def grammar_file=(_arg0); end

  # Returns the value of attribute grammar_lines.
  #
  # source://rexical//lib/rexical/generator.rb#18
  def grammar_lines; end

  # Sets the attribute grammar_lines
  #
  # @param value the value to set the attribute grammar_lines to.
  #
  # source://rexical//lib/rexical/generator.rb#18
  def grammar_lines=(_arg0); end

  # Returns the value of attribute ignorecase.
  #
  # source://rexical//lib/rexical/generator.rb#25
  def ignorecase; end

  # Sets the attribute ignorecase
  #
  # @param value the value to set the attribute ignorecase to.
  #
  # source://rexical//lib/rexical/generator.rb#25
  def ignorecase=(_arg0); end

  # Returns the value of attribute independent.
  #
  # source://rexical//lib/rexical/generator.rb#26
  def independent; end

  # Sets the attribute independent
  #
  # @param value the value to set the attribute independent to.
  #
  # source://rexical//lib/rexical/generator.rb#26
  def independent=(_arg0); end

  # Returns the value of attribute lineno.
  #
  # source://rexical//lib/rexical/generator.rb#22
  def lineno; end

  # Sets the attribute lineno
  #
  # @param value the value to set the attribute lineno to.
  #
  # source://rexical//lib/rexical/generator.rb#22
  def lineno=(_arg0); end

  # Returns the value of attribute module_name.
  #
  # source://rexical//lib/rexical/generator.rb#20
  def module_name; end

  # Sets the attribute module_name
  #
  # @param value the value to set the attribute module_name to.
  #
  # source://rexical//lib/rexical/generator.rb#20
  def module_name=(_arg0); end

  # source://rexical//lib/rexical/generator.rb#123
  def next_line; end

  # source://rexical//lib/rexical/generator.rb#130
  def parse; end

  # source://rexical//lib/rexical/generator.rb#229
  def parse_action(st, lastmodes = T.unsafe(nil)); end

  # source://rexical//lib/rexical/generator.rb#217
  def parse_rule(st); end

  # source://rexical//lib/rexical/generator.rb#119
  def read_grammar; end

  # Returns the value of attribute rules.
  #
  # source://rexical//lib/rexical/generator.rb#23
  def rules; end

  # Sets the attribute rules
  #
  # @param value the value to set the attribute rules to.
  #
  # source://rexical//lib/rexical/generator.rb#23
  def rules=(_arg0); end

  # Returns the value of attribute scanner_file.
  #
  # source://rexical//lib/rexical/generator.rb#19
  def scanner_file; end

  # Sets the attribute scanner_file
  #
  # @param value the value to set the attribute scanner_file to.
  #
  # source://rexical//lib/rexical/generator.rb#19
  def scanner_file=(_arg0); end

  # source://rexical//lib/rexical/generator.rb#354
  def write_scanner(f = T.unsafe(nil)); end

  private

  # source://rexical//lib/rexical/generator.rb#346
  def scanner_io; end
end

# source://rexical//lib/rexical/generator.rb#281
Rexical::Generator::REX_HEADER = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical/generator.rb#329
Rexical::Generator::REX_STUB = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical/generator.rb#290
Rexical::Generator::REX_UTIL = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical.rb#7
Rexical::Mailto = T.let(T.unsafe(nil), String)

# source://rexical//lib/rexical/generator.rb#14
class Rexical::ParseError < ::StandardError; end

# source://rexical//lib/rexical.rb#5
Rexical::VERSION = T.let(T.unsafe(nil), String)
